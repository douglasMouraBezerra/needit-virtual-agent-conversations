<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_cb_design_topic">
    <sys_cb_design_topic action="INSERT_OR_UPDATE">
        <compiled_topic display_value="_PRVW__0cb2595dc9d7821087030459d74abe7d">80b2595d83d78210cf05e030ceaad37f</compiled_topic>
        <design_definition>{"type":"FlowTopic","triggers":[{"type":"Trigger","name":"f7b3264e2491417b90ec7854e3698b6c","triggerType":"request","applicability":{"type":"Applicability","mode":"script","value":"true"},"id":"f7b3264e2491417b90ec7854e3698b6c"}],"goals":[{"name":"primary","trigger_id":"f7b3264e2491417b90ec7854e3698b6c","nodes":[{"type":"StartGoal","goal_id":"primary","greeting_msg":{"type":"String","mode":"script","value":"(function execute() {\n    /* Return a quoted string.  For example:\n\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessageLang(\"hi there {0}\", vaContext.getRequesterLang(), [vaInputs.first_name]);\n       } else {\n           return gs.getMessageLang(\"how are you {0}\", vaContext.getRequesterLang(), [vaInputs.last_name]);\n       }\n    */\n    return 'Olá ' +vaInputs.user.name ;\n})()\n"},"id":"dffe7c0c45824e90a087830b30310ed5","name":"Start","expert_mode":false},{"type":"TerminateGoal","goal_id":"primary","confirmation_msg":{"type":"String","mode":"string","value":""},"id":"0373a927df90494d84b8f872b875f7b3","name":"End","expert_mode":false},{"type":"InputPrompt","variable_id":"9b233f7eece14927a5438e0c2466f2cb","message":{"type":"String","mode":"string","value":"gs.getMessageLang(\"Informe o nome do usuario que deseja buscar:\", vaContext.getRequesterLang())"},"acknowledgement":{"type":"String","mode":"string","value":"gs.getMessageLang(\"Deixe -me dar uma olhada...\", vaContext.getRequesterLang())"},"nlu_entity_binding":{"type":"NLUEntityBinding","allow_text_input":false,"use_confirmation_prompt":true},"request_feedback":true,"skippable":{"type":"Applicability","mode":"script","value":"false"},"skipreprompt":{"type":"Applicability","mode":"script","value":"false"},"id":"5731162188eb43db9cfb1b11e818a577","name":"Search user","goal_id":"primary","applicability":{"type":"Applicability","mode":"script","value":"true"},"expert_mode":false,"formatType":"Text","validationScript":"","description":""},{"type":"ReferenceChoiceInputPrompt","mode":"external","id":"86e4792d49844e7a85bbccce09135aea","name":"Catch user","goal_id":"primary","applicability":{"type":"Applicability","mode":"script","value":"true"},"expert_mode":false,"variable_id":"65fb9016f7d24bd5ba6eb0bb3c38ccd2","message":{"type":"String","mode":"string","value":"gs.getMessageLang(\"Foram encontrados esses usuarios:\", vaContext.getRequesterLang())"},"request_feedback":false,"skippable":{"type":"Applicability","mode":"script","value":"false"},"skipreprompt":{"type":"Applicability","mode":"script","value":"false"},"nlu_entity_binding":{"type":"NLUEntityBinding","allow_text_input":false,"use_confirmation_prompt":true},"expression_mode":"script","script":"(function execute() {\n    /* Code your script logic here. For example, you might want to call an external web service\n       to find the best local Italian restaurants.  Call a Restaurants Web Service then use the results\n       to populate an options array.\n\n        var options = [];\n        options.push({ 'value': 'best_italian_1', 'label': gs.getMessageLang(\"Best Italian Restaurant Ever\", vaContext.getRequesterLang()), 'render_style': 'data' });\n        options.push({ 'value': 'best_italian_2', 'label': gs.getMessageLang(\"Even Better Italian Restaurant\", vaContext.getRequesterLang()), 'render_style': 'data' });\n        return options;\n    */\n\n    var options = []; // add options here...\n\n    var grUser = new GlideRecord(\"sys_user\");\n    grUser.addQuery(\"name\",\"CONTAINS\",vaInputs.search_user);\n    grUser.query();\n\n    while(grUser.next()){\n    var userId = grUser.getUniqueValue() || \" \";\n    var name = grUser.getValue(\"name\") || \" \";\n    var title = grUser.getValue('title') || \" \";\n    var location = grUser.getDisplayValue('location') || \" \";\n\n        options.push({'value': userId,\n          'label': name + \", \" + title + \" - \" + location})\n    }\n    return options;\n})()\n","metadataScript":"","cardName":"","cardFields":[],"no_options_found_message":{"type":"String","mode":"script","value":"(function execute() {\n    /* Return a quoted string.  For example:\n\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessageLang(\"hi there {0}\", vaContext.getRequesterLang(), [vaInputs.first_name]);\n       } else {\n           return gs.getMessageLang(\"how are you {0}\", vaContext.getRequesterLang(), [vaInputs.last_name]);\n       }\n    */\n    return 'Não foram encontrados usuários com esse nome...';\n})()\n"},"condition":{"type":"Condition","mode":"external_script","value":"(function execute() {\n    /* Code your script logic here. For example, you might want to call an external web service\n       to find the best local Italian restaurants.  Call a Restaurants Web Service then use the results\n       to populate an options array.\n\n        var options = [];\n        options.push({ 'value': 'best_italian_1', 'label': gs.getMessageLang(\"Best Italian Restaurant Ever\", vaContext.getRequesterLang()), 'render_style': 'data' });\n        options.push({ 'value': 'best_italian_2', 'label': gs.getMessageLang(\"Even Better Italian Restaurant\", vaContext.getRequesterLang()), 'render_style': 'data' });\n        return options;\n    */\n\n    var options = []; // add options here...\n\n    var grUser = new GlideRecord(\"sys_user\");\n    grUser.addQuery(\"name\",\"CONTAINS\",vaInputs.search_user);\n    grUser.query();\n\n    while(grUser.next()){\n    var userId = grUser.getUniqueValue() || \" \";\n    var name = grUser.getValue(\"name\") || \" \";\n    var title = grUser.getValue('title') || \" \";\n    var location = grUser.getDisplayValue('location') || \" \";\n\n        options.push({'value': userId,\n          'label': name + \", \" + title + \" - \" + location})\n    }\n    return options;\n})()\n"},"description":""}],"edges":[{"type":"Edge","source_node_id":"dffe7c0c45824e90a087830b30310ed5","target_node_id":"5731162188eb43db9cfb1b11e818a577","id":"4ca7a2959cd04b3686f1dca001c3ead7"},{"type":"Edge","source_node_id":"5731162188eb43db9cfb1b11e818a577","target_node_id":"86e4792d49844e7a85bbccce09135aea","id":"c7eb3b52fd744c5db433ee07389a897b"},{"type":"Edge","source_node_id":"86e4792d49844e7a85bbccce09135aea","target_node_id":"0373a927df90494d84b8f872b875f7b3","id":"e498fe3db1b54e11934bd7815874c330"}],"id":"primary"}],"script_variables":[],"glide_variables":[{"type":"Reference","table":"sys_user","id":"current-user","name":"user","formatType":"text","secure":false,"sensitive":false,"aiInput":false,"list":false},{"type":"String","name":"search_user","list":false,"id":"9b233f7eece14927a5438e0c2466f2cb","formatType":"Text","validationScript":"","secure":false,"sensitive":false,"aiInput":false},{"type":"Choice","choices":[],"id":"65fb9016f7d24bd5ba6eb0bb3c38ccd2","name":"catch_user","formatType":"text","secure":false,"sensitive":false,"aiInput":false,"list":false,"table":""}],"applicability":{"type":"Applicability","mode":"script","value":"true"},"roles":[],"scope":"aa0ec7fa83030210cf05e030ceaad3ac","library-usage":{"type":"Library","input-parameters":[],"return-values-mapping":[]},"domain":"global","topic_type":"TOPIC_BLOCK","channels":[],"dialog_acts_enabled":false,"id":"28ee819983d78210cf05e030ceaad3b3","name":"_PRVW__0cb2595dc9d7821087030459d74abe7d","key_phrases":[],"nlu_provider":"","nlu_model":"","nlu_model_label":"","nlu_intent":"","nlu_intent_label":"","flexible_conversation_switching":true,"autopilot_topic":false,"design_categories":[],"triggerable_by_notification":false,"description":"xxxx","model_type":"nlu_keyword","foundational":false,"modify_confirmation_enabled":false,"context_profiles":[],"title":"Scripting Node Study","library":true,"readOnly":false,"nluMapping":"[]"}</design_definition>
        <design_topic_id>28ee819983d78210cf05e030ceaad3b3</design_topic_id>
        <graph>{
  "graph_api_version": "1.0.66",
  "goals": {
    "primary": {
      "id": "primary",
      "trigger": {
        "type": "primary"
      },
      "name": "primary",
      "applicability": "",
      "description": "",
      "nodes": {
        "dffe7c0c45824e90a087830b30310ed5": {
          "id": "dffe7c0c45824e90a087830b30310ed5",
          "stepType": "Start",
          "name": "Start",
          "greetingResponse": {
            "value": "(function execute() {\n    /* Return a quoted string.  For example:\n\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessageLang(\"hi there {0}\", vaContext.getRequesterLang(), [vaInputs.first_name]);\n       } else {\n           return gs.getMessageLang(\"how are you {0}\", vaContext.getRequesterLang(), [vaInputs.last_name]);\n       }\n    */\n    return 'Olá ' +vaInputs.user.name ;\n})()\n",
            "mode": "script"
          },
          "parameters": [],
          "variableIds": []
        },
        "0373a927df90494d84b8f872b875f7b3": {
          "id": "0373a927df90494d84b8f872b875f7b3",
          "stepType": "TerminateGoal",
          "name": "End",
          "confirmationMessage": {
            "mode": "simple",
            "value": ""
          }
        },
        "5731162188eb43db9cfb1b11e818a577": {
          "id": "5731162188eb43db9cfb1b11e818a577",
          "stepType": "TextPrompt",
          "name": "Search user",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Informe o nome do usuario que deseja buscar: "
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Deixe -me dar uma olhada..."
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "skipReprompt": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false,
          "variableId": "9b233f7eece14927a5438e0c2466f2cb",
          "detailDescription": "",
          "inputType": {
            "format": "Text",
            "script": ""
          },
          "requestFeedback": true
        },
        "86e4792d49844e7a85bbccce09135aea": {
          "name": "Catch user",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Foram encontrados esses usuarios: "
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "skipReprompt": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "variableId": "65fb9016f7d24bd5ba6eb0bb3c38ccd2",
          "detailDescription": "",
          "id": "86e4792d49844e7a85bbccce09135aea",
          "stepType": "ReferenceChoicePrompt",
          "mode": "external",
          "script": "(function execute() {\n    /* Code your script logic here. For example, you might want to call an external web service\n       to find the best local Italian restaurants.  Call a Restaurants Web Service then use the results\n       to populate an options array.\n\n        var options = [];\n        options.push({ 'value': 'best_italian_1', 'label': gs.getMessageLang(\"Best Italian Restaurant Ever\", vaContext.getRequesterLang()), 'render_style': 'data' });\n        options.push({ 'value': 'best_italian_2', 'label': gs.getMessageLang(\"Even Better Italian Restaurant\", vaContext.getRequesterLang()), 'render_style': 'data' });\n        return options;\n    */\n\n    var options = []; // add options here...\n\n    var grUser = new GlideRecord(\"sys_user\");\n    grUser.addQuery(\"name\",\"CONTAINS\",vaInputs.search_user);\n    grUser.query();\n\n    while(grUser.next()){\n    var userId = grUser.getUniqueValue() || \" \";\n    var name = grUser.getValue(\"name\") || \" \";\n    var title = grUser.getValue('title') || \" \";\n    var location = grUser.getDisplayValue('location') || \" \";\n\n        options.push({'value': userId,\n          'label': name + \", \" + title + \" - \" + location})\n    }\n    return options;\n})()\n",
          "metadataScript": "",
          "cardData": {},
          "isMultipleSelect": false,
          "noRecordsResponseMsg": {
            "value": "(function execute() {\n    /* Return a quoted string.  For example:\n\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessageLang(\"hi there {0}\", vaContext.getRequesterLang(), [vaInputs.first_name]);\n       } else {\n           return gs.getMessageLang(\"how are you {0}\", vaContext.getRequesterLang(), [vaInputs.last_name]);\n       }\n    */\n    return 'Não foram encontrados usuários com esse nome...';\n})()\n",
            "mode": "script"
          },
          "condition": {
            "value": "(function execute() {\n    /* Code your script logic here. For example, you might want to call an external web service\n       to find the best local Italian restaurants.  Call a Restaurants Web Service then use the results\n       to populate an options array.\n\n        var options = [];\n        options.push({ 'value': 'best_italian_1', 'label': gs.getMessageLang(\"Best Italian Restaurant Ever\", vaContext.getRequesterLang()), 'render_style': 'data' });\n        options.push({ 'value': 'best_italian_2', 'label': gs.getMessageLang(\"Even Better Italian Restaurant\", vaContext.getRequesterLang()), 'render_style': 'data' });\n        return options;\n    */\n\n    var options = []; // add options here...\n\n    var grUser = new GlideRecord(\"sys_user\");\n    grUser.addQuery(\"name\",\"CONTAINS\",vaInputs.search_user);\n    grUser.query();\n\n    while(grUser.next()){\n    var userId = grUser.getUniqueValue() || \" \";\n    var name = grUser.getValue(\"name\") || \" \";\n    var title = grUser.getValue('title') || \" \";\n    var location = grUser.getDisplayValue('location') || \" \";\n\n        options.push({'value': userId,\n          'label': name + \", \" + title + \" - \" + location})\n    }\n    return options;\n})()\n",
            "mode": "external_script"
          },
          "hasCardHeader": false,
          "cardMetadata": {
            "mode": "card",
            "metadataScript": "",
            "cardTemplate": "",
            "cardFields": {},
            "cardDefinition": {}
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false
        }
      },
      "edges": [
        {
          "id": "4ca7a2959cd04b3686f1dca001c3ead7",
          "edgeType": "Edge",
          "source": "dffe7c0c45824e90a087830b30310ed5",
          "target": "5731162188eb43db9cfb1b11e818a577",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "c7eb3b52fd744c5db433ee07389a897b",
          "edgeType": "Edge",
          "source": "5731162188eb43db9cfb1b11e818a577",
          "target": "86e4792d49844e7a85bbccce09135aea",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "e498fe3db1b54e11934bd7815874c330",
          "edgeType": "Edge",
          "source": "86e4792d49844e7a85bbccce09135aea",
          "target": "0373a927df90494d84b8f872b875f7b3",
          "sourcePort": "",
          "targetPort": ""
        }
      ]
    }
  },
  "variables": {
    "current-user": {
      "category": "vaInputs",
      "id": "current-user",
      "label": "User",
      "name": "user",
      "table": "sys_user",
      "varType": "reference"
    },
    "9b233f7eece14927a5438e0c2466f2cb": {
      "id": "9b233f7eece14927a5438e0c2466f2cb",
      "name": "search_user",
      "label": "Search User",
      "varType": "string",
      "secure": false,
      "category": "vaInputs",
      "encryptionHashFunction": "SHA-256",
      "encryptionSalt": {
        "value": "MTcyMDQ3MTgyNzc1MCBWQSBEZXNpZ25lciBpcyBhd2Vzb21l",
        "mode": "simple"
      },
      "nodeId": "5731162188eb43db9cfb1b11e818a577",
      "isHidden": false
    },
    "65fb9016f7d24bd5ba6eb0bb3c38ccd2": {
      "id": "65fb9016f7d24bd5ba6eb0bb3c38ccd2",
      "name": "catch_user",
      "label": "Catch User",
      "varType": "reference",
      "table": "",
      "category": "vaInputs",
      "nodeId": "86e4792d49844e7a85bbccce09135aea",
      "isHidden": false
    }
  }
}</graph>
        <name>_PRVW__0cb2595dc9d7821087030459d74abe7d</name>
        <sys_class_name>sys_cb_design_topic</sys_class_name>
        <sys_created_by>foco</sys_created_by>
        <sys_created_on>2024-07-08 21:05:26</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>08b2595d83d78210cf05e030ceaad382</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FlowTopic</sys_name>
        <sys_package display_value="NeedIt Virtual Agent Conversations" source="x_606182_nvac">aa0ec7fa83030210cf05e030ceaad3ac</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt Virtual Agent Conversations">aa0ec7fa83030210cf05e030ceaad3ac</sys_scope>
        <sys_update_name>sys_cb_design_topic_08b2595d83d78210cf05e030ceaad382</sys_update_name>
        <sys_updated_by>foco</sys_updated_by>
        <sys_updated_on>2024-07-08 21:05:26</sys_updated_on>
        <type>FlowTopic</type>
    </sys_cb_design_topic>
</record_update>
